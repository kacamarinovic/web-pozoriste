// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace web_pozoriste.Migrations
{
    [DbContext(typeof(PozoristeContext))]
    [Migration("20220226205027_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Models.Glumac", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Glumac");
                });

            modelBuilder.Entity("Models.Izvodjenje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PozoristeID")
                        .HasColumnType("int");

                    b.Property<int?>("PredstavaID")
                        .HasColumnType("int");

                    b.Property<int?>("ScenaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PozoristeID");

                    b.HasIndex("PredstavaID");

                    b.HasIndex("ScenaID");

                    b.ToTable("Izvodjenje");
                });

            modelBuilder.Entity("Models.Pozoriste", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BrojScena")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Pozoriste");
                });

            modelBuilder.Entity("Models.Predstava", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GodinaPremijere")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("PozoristeID")
                        .HasColumnType("int");

                    b.Property<string>("Zanr")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex("PozoristeID");

                    b.ToTable("Predstava");
                });

            modelBuilder.Entity("Models.Scena", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PozoristeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("PozoristeID");

                    b.ToTable("Scena");
                });

            modelBuilder.Entity("Models.Uloga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GlumacID")
                        .HasColumnType("int");

                    b.Property<string>("Lik")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PredstavaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GlumacID");

                    b.HasIndex("PredstavaID");

                    b.ToTable("Uloga");
                });

            modelBuilder.Entity("Models.Izvodjenje", b =>
                {
                    b.HasOne("Models.Pozoriste", "Pozoriste")
                        .WithMany("Repertoar")
                        .HasForeignKey("PozoristeID");

                    b.HasOne("Models.Predstava", "Predstava")
                        .WithMany("Izvodjenja")
                        .HasForeignKey("PredstavaID");

                    b.HasOne("Models.Scena", "Scena")
                        .WithMany("Izvodjenja")
                        .HasForeignKey("ScenaID");

                    b.Navigation("Pozoriste");

                    b.Navigation("Predstava");

                    b.Navigation("Scena");
                });

            modelBuilder.Entity("Models.Predstava", b =>
                {
                    b.HasOne("Models.Pozoriste", "Pozoriste")
                        .WithMany("Predstave")
                        .HasForeignKey("PozoristeID");

                    b.Navigation("Pozoriste");
                });

            modelBuilder.Entity("Models.Scena", b =>
                {
                    b.HasOne("Models.Pozoriste", "Pozoriste")
                        .WithMany("Scene")
                        .HasForeignKey("PozoristeID");

                    b.Navigation("Pozoriste");
                });

            modelBuilder.Entity("Models.Uloga", b =>
                {
                    b.HasOne("Models.Glumac", "Glumac")
                        .WithMany("Uloge")
                        .HasForeignKey("GlumacID");

                    b.HasOne("Models.Predstava", "Predstava")
                        .WithMany("Uloge")
                        .HasForeignKey("PredstavaID");

                    b.Navigation("Glumac");

                    b.Navigation("Predstava");
                });

            modelBuilder.Entity("Models.Glumac", b =>
                {
                    b.Navigation("Uloge");
                });

            modelBuilder.Entity("Models.Pozoriste", b =>
                {
                    b.Navigation("Predstave");

                    b.Navigation("Repertoar");

                    b.Navigation("Scene");
                });

            modelBuilder.Entity("Models.Predstava", b =>
                {
                    b.Navigation("Izvodjenja");

                    b.Navigation("Uloge");
                });

            modelBuilder.Entity("Models.Scena", b =>
                {
                    b.Navigation("Izvodjenja");
                });
#pragma warning restore 612, 618
        }
    }
}
